package streams;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class FlatMapEx {
	
	public static void main(String[] args)
	{
		
		 
	       // making the arraylist object of List of Integer
	       List<List<Integer> > number = new ArrayList<>();
	       
	       // adding the elements to number arraylist
	       number.add(Arrays.asList(1, 2));
	       number.add(Arrays.asList(3, 4));
	       number.add(Arrays.asList(5, 6));
	       number.add(Arrays.asList(7, 8));
	       
	       System.out.println("List of list-" + number);
	       
	       // using flatmap() to flatten this list
	       List<Integer> flatList
	           = number.stream()
	                 .flatMap(list -> list.stream())
	                 .collect(Collectors.toList());
	       
	       // printing the list
	       System.out.println("List generate by flatMap-"
	                          + flatList);
	        
	     
	       //Use FlatMap to get one common List of all subordinates of all employees
		   List < Employee > employees1 = new ArrayList < Employee > ();
	       employees1.add(new Employee(10, "Ramesh", 30, 400000,true,Arrays.asList("Ram","Shyam")));
	       employees1.add(new Employee(20, "John", 29, 350000,false,Arrays.asList("Sita","Gita")));
	     
		   List<List<String>> listoflistsubs = employees1.stream().map(Employee::getSubordinates).collect(Collectors.toList());
	       List<String> allsubs = listoflistsubs.stream().flatMap(List::stream).collect(Collectors.toList());
	       System.out.println("List of all subordinates generated by flatMap-"
	               + allsubs);
	       
	       List<String> allsubs1 = employees1.stream().map(Employee::getSubordinates)
	                                                   .flatMap(List::stream)
	                                                   .collect(Collectors.toList());
	       
	       System.out.println("List of all subordinates generated by flatMap-"
	               + allsubs1);
	       
	      
	        
	}

}
